<project name="buildjs" default="build">
    <property file="build.properties"/>
    <property environment="env"/>
    <condition property="sdk.dir" value="${env.APPENGINE_JAVA_SDK}" else="../appengine-java-sdk-1.3.6">
        <isset property="evn.APPENGINE_JAVA_SDK"/>
    </condition>

    <property name="packages" location=".packages" />

    <import file="${sdk.dir}/config/user/ant-macros.xml" />

    <path id="project.classpath">
        <pathelement path="war/WEB-INF/classes" />
        <fileset dir="war/WEB-INF/lib">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="${sdk.dir}/lib">
            <include name="shared/**/*.jar" />
        </fileset>
    </path>
    
    <available file="${packages}" type="dir" property="packages.exists"/>

    <target name="init" description="pull in dependencies" unless="packages.exists">
        <mkdir dir="${packages}"/>
        <exec executable="git">
            <arg line="clone git://github.com/tschaub/buildkit.git ${packages}/buildkit"/>
        </exec>
    </target>

    <target name="build" depends="init">
        <mkdir dir="build"/>
        <copy todir="build">
            <fileset dir="src/main/webapp"/>
        </copy>
        <copy todir="build/WEB-INF/packages">
            <fileset dir="${packages}">
                <exclude name="**/.git/"/>
                <exclude name="**/.git*"/>
                <exclude name="**/examples/"/>
                <exclude name="**/example/"/>
                <exclude name="**/tests/"/>
                <exclude name="**/docs/"/>
                <exclude name="**/zips/"/>
                <exclude name="**/.tusk/"/>
                <exclude name="**/*.md"/>
            </fileset>
        </copy>
    </target>

    <target name="runserver" depends="build"
            description="Starts the development server.">
        <dev_appserver war="build" />
    </target>

    <target name="clean" description="remove build">
        <delete dir="build"/>
    </target>

    <target name="war" description="create war" depends="init">
        <copy todir="war/WEB-INF/packages">
            <fileset dir="${packages}">
                <exclude name="**/.git/"/>
                <exclude name="**/.git*"/>
                <exclude name="**/examples/"/>
                <exclude name="**/example/"/>
                <exclude name="**/tests/"/>
                <exclude name="**/docs/"/>
                <exclude name="**/zips/"/>
                <exclude name="**/.tusk/"/>
                <exclude name="**/*.md"/>
            </fileset>
        </copy>
        <copy todir="war/WEB-INF/src">
            <fileset dir="src">
                <exclude name="**/.git/"/>
                <exclude name="**/.git*"/>
            </fileset>
        </copy>
    </target>
    
    <target name="copyjars"
            description="Copies the App Engine JARs to the WAR.">
        <copy
                todir="war/WEB-INF/lib"
                flatten="true">
            <fileset dir="${sdk.dir}/lib/user">
<!--
                <include name="**/*.jar" />
-->
                <include name="*.jar" />
            </fileset>
        </copy>
    </target>
    
    <target name="compile" depends="copyjars"
            description="Compiles Java source and copies other source files to the WAR.">
<!--
        <mkdir dir="war/WEB-INF/classes" />
        <copy todir="war/WEB-INF/classes">
            <fileset dir="src">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
        <javac
                srcdir="src"
                destdir="war/WEB-INF/classes"
                classpathref="project.classpath"
                debug="on" />
-->
    </target>

    <target name="datanucleusenhance" depends="compile"
            description="Performs JDO enhancement on compiled data classes.">
<!--
        <enhance_war war="war" />
-->
    </target>

    <target name="update" depends="datanucleusenhance, war"
            description="Uploads the application to App Engine.">
        <!-- run `appengine-java/bin/appcfg.sh update war` to establish credentials first -->
        <appcfg action="update" war="war" />
    </target>

    <target name="update_indexes" depends="datanucleusenhance"
            description="Uploads just the datastore index configuration to App Engine.">
        <appcfg action="update_indexes" war="war" />
    </target>

    <target name="rollback" depends="datanucleusenhance"
            description="Rolls back an interrupted application update.">
        <appcfg action="rollback" war="war" />
    </target>

    <target name="request_logs"
            description="Downloads log data from App Engine for the application.">
        <appcfg action="request_logs" war="war">
            <options>
                <arg value="--num_days=5"/>
            </options>
            <args>
                <arg value="logs.txt"/>
            </args>
        </appcfg>
    </target>
</project>
